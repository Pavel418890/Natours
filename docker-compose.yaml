version: '3.9'

services:
  broker:
    container_name: broker
    image: rabbitmq:3-management-alpine
    restart: on-failure
    networks:
    - backend
    env_file:
    - .envs/.env
    ports:
    - 15672:15672

  db:
    build:
      context: ./postgres
    container_name: db
    networks:
    - backend
    restart: on-failure
    env_file: .envs/.env.db
    volumes:
    - pgdata:/var/lib/postgresql/data

  flower:
    container_name: flower
    depends_on:
    - worker
    - broker
    image: plots418890/natours_backend
    networks:
    - backend
    restart: on-failure
    entrypoint: ['${PROJECT_PATH?Variable not set}/commands/entrypoint.flower.sh']
    env_file:
    - .envs/.env
    ports:
    - 5555:5555
    volumes:
    - ./backend/src:${PROJECT_PATH?Variable not set}


  resultdb:
    container_name: resultdb
    depends_on:
    - broker
    - backend
    - worker
    entrypoint: [ 'redis-server' ]
    image: redis:7.0-rc-alpine
    networks:
    - backend
    restart: on-failure

  reverseproxy:
          #command: /bin/sh -c "envsubst < /etc/nginx/nginx.conf > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"
    command: /bin/sh -c "sleep 30m"
    environment:
    - PROJECT_PATH=${PROJECT_PATH?Variable not set}
    container_name: reversproxy
    depends_on:
    - backend
    image: nginx:1.21.6-alpine
    networks:
    - backend
    restart: on-failure
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./frontend/dist/:/usr/share/nginx/html/
    - webserver_static:${PROJECT_PATH?Variable not set}/static
    - webserver_media:${PROJECT_PATH?Variable not set}/media

  backend:
    entrypoint: [ '${PROJECT_PATH?Variable not set}/commands/entrypoint.sh' ]
    build:
      context: ./backend/
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
        PROJECT_PATH: ${PROJECT_PATH-/usr/src/natours}
    container_name: backend
    env_file:
    - .envs/.env
    depends_on:
    - db
    - broker
    image: plots418890/natours_backend
    networks:
    - backend
    restart: on-failure
    volumes:
    - ./backend/src:${PROJECT_PATH?Variable not set}
    - webserver_static:${PROJECT_PATH?Variable not set}/static
    - webserver_media:${PROJECT_PATH?Variable not set}/media

  worker:
    container_name: worker
    entrypoint: [ '${PROJECT_PATH?Variable not set}/commands/entrypoint.celery.sh' ]
    env_file:
    - .envs/.env
    volumes:
    - ./backend/src:${PROJECT_PATH?Variable not set}
    depends_on:
    - broker
    - db
    image: plots418890/natours_backend
    networks:
    - backend
    restart: on-failure

volumes:
  pgdata:
  webserver_media:
  webserver_static:

networks:
  backend:
    name: 'webservernet'
